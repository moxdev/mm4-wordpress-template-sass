// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
    font-size: ($sizeValue * 15) * 1px;
    font-size: $sizeValue * 0.9375rem;
}

@mixin container {
    max-width: $width_max-content-width;
    margin-left: auto;
    margin-right: auto;
}

@mixin absolute {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}


// Center block
@mixin center-block {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

@mixin margin-auto {
    margin-left: auto;
    margin-right: auto;
}

// Font Smoothing
@mixin font-smooth {
    text-shadow: 1px 1px 1px rgba(0,0,0,0.004);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

// Section padding
@mixin section-padding {
    padding-top: 3em;
    padding-bottom: 3em;
}

// Clearfix
@mixin clearfix() {
    content: "";
    display: table;
    table-layout: fixed;
}

// Reset
@mixin reset() {
    margin:0;
    padding:0;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
    clear: both;
}

// Media queries
@mixin respond-to($breakpoint) {
    // Retrieves the value from the key
    $value: map-get($breakpoints, $breakpoint);

    // If the key exists in the map
    @if $value != null {
        // Prints a media query based on the value
        @media screen and (min-width: $value) {
            @content;
    }
}

// If the key doesn't exist in the map
@else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
    }
}

@mixin respond-to-vert($breakpoint) {
    // Retrieves the value from the key
    $value: map-get($breakpoints-vert, $breakpoint);

    // If the key exists in the map
    @if $value != null {
        // Prints a media query based on the value
        @media screen and (min-height: $value) {
            @content;
    }
}

// If the key doesn't exist in the map
@else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
    }
}

// Outside padding
@mixin padding-left-right() {
    padding-left: 1.75rem;
    padding-right: 1.75rem;

    @include respond-to(small) {
        padding-left: 2.75rem;
        padding-right: 2.75rem;
    }
}

// Padding top and Bottom
@mixin padding-top-bottom() {
    padding-top: 1.75rem;
    padding-bottom: 1.75rem;

    @include respond-to(small) {
        padding-top: 2.75rem;
        padding-bottom: 2.75rem;
    }
}

// Outside margin
@mixin margin-left-right() {
    margin-left: 1.75rem;
    margin-right: 1.75rem;

    @include respond-to(small) {
        margin-left: 2.75rem;
        margin-right: 2.75rem;
    }
}